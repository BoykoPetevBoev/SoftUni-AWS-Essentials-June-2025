{
	"Resources": {
		"CatWebsiteBucket56DD82B3": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"PublicAccessBlockConfiguration": {
					"BlockPublicAcls": false,
					"BlockPublicPolicy": false,
					"IgnorePublicAcls": false,
					"RestrictPublicBuckets": false
				},
				"Tags": [
					{
						"Key": "aws-cdk:auto-delete-objects",
						"Value": "true"
					},
					{
						"Key": "aws-cdk:cr-owned:e9582103",
						"Value": "true"
					}
				],
				"WebsiteConfiguration": {
					"IndexDocument": "index.html"
				}
			},
			"UpdateReplacePolicy": "Delete",
			"DeletionPolicy": "Delete",
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/CatWebsiteBucket/Resource"
			}
		},
		"CatWebsiteBucketPolicyCDA402B6": {
			"Type": "AWS::S3::BucketPolicy",
			"Properties": {
				"Bucket": {
					"Ref": "CatWebsiteBucket56DD82B3"
				},
				"PolicyDocument": {
					"Statement": [
						{
							"Action": "s3:GetObject",
							"Effect": "Allow",
							"Principal": {
								"AWS": "*"
							},
							"Resource": {
								"Fn::Join": [
									"",
									[
										{
											"Fn::GetAtt": [
												"CatWebsiteBucket56DD82B3",
												"Arn"
											]
										},
										"/*"
									]
								]
							}
						},
						{
							"Action": [
								"s3:DeleteObject*",
								"s3:GetBucket*",
								"s3:List*",
								"s3:PutBucketPolicy"
							],
							"Effect": "Allow",
							"Principal": {
								"AWS": {
									"Fn::GetAtt": [
										"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
										"Arn"
									]
								}
							},
							"Resource": [
								{
									"Fn::GetAtt": [
										"CatWebsiteBucket56DD82B3",
										"Arn"
									]
								},
								{
									"Fn::Join": [
										"",
										[
											{
												"Fn::GetAtt": [
													"CatWebsiteBucket56DD82B3",
													"Arn"
												]
											},
											"/*"
										]
									]
								}
							]
						}
					],
					"Version": "2012-10-17"
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/CatWebsiteBucket/Policy/Resource"
			}
		},
		"CatWebsiteBucketAutoDeleteObjectsCustomResource2A5964A3": {
			"Type": "Custom::S3AutoDeleteObjects",
			"Properties": {
				"ServiceToken": {
					"Fn::GetAtt": [
						"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
						"Arn"
					]
				},
				"BucketName": {
					"Ref": "CatWebsiteBucket56DD82B3"
				}
			},
			"DependsOn": [
				"CatWebsiteBucketPolicyCDA402B6"
			],
			"UpdateReplacePolicy": "Delete",
			"DeletionPolicy": "Delete",
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/CatWebsiteBucket/AutoDeleteObjectsCustomResource/Default"
			}
		},
		"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Action": "sts:AssumeRole",
							"Effect": "Allow",
							"Principal": {
								"Service": "lambda.amazonaws.com"
							}
						}
					]
				},
				"ManagedPolicyArns": [
					{
						"Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
			}
		},
		"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Code": {
					"S3Bucket": {
						"Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
					},
					"S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
				},
				"Timeout": 900,
				"MemorySize": 128,
				"Handler": "index.handler",
				"Role": {
					"Fn::GetAtt": [
						"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
						"Arn"
					]
				},
				"Runtime": "nodejs22.x",
				"Description": {
					"Fn::Join": [
						"",
						[
							"Lambda function for auto-deleting objects in ",
							{
								"Ref": "CatWebsiteBucket56DD82B3"
							},
							" S3 bucket."
						]
					]
				}
			},
			"DependsOn": [
				"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
			],
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
				"aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
				"aws:asset:property": "Code"
			}
		},
		"DeployWebsiteAwsCliLayer17DBC421": {
			"Type": "AWS::Lambda::LayerVersion",
			"Properties": {
				"Content": {
					"S3Bucket": {
						"Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
					},
					"S3Key": "c49d356cac773d491c5f7ac148995a1181498a8e289429f8612a7f7e3814f535.zip"
				},
				"Description": "/opt/awscli/aws"
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/DeployWebsite/AwsCliLayer/Resource",
				"aws:asset:path": "asset.c49d356cac773d491c5f7ac148995a1181498a8e289429f8612a7f7e3814f535.zip",
				"aws:asset:is-bundled": false,
				"aws:asset:property": "Content"
			}
		},
		"DeployWebsiteCustomResourceD116527B": {
			"Type": "Custom::CDKBucketDeployment",
			"Properties": {
				"ServiceToken": {
					"Fn::GetAtt": [
						"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
						"Arn"
					]
				},
				"SourceBucketNames": [
					{
						"Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
					}
				],
				"SourceObjectKeys": [
					"82d1c92cda93dd621a02f89e92ada3414369e5bf129973100572b6c98fc9cfa0.zip"
				],
				"DestinationBucketName": {
					"Ref": "CatWebsiteBucket56DD82B3"
				},
				"Prune": true,
				"OutputObjectKeys": true
			},
			"UpdateReplacePolicy": "Delete",
			"DeletionPolicy": "Delete",
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/DeployWebsite/CustomResource/Default"
			}
		},
		"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [
						{
							"Action": "sts:AssumeRole",
							"Effect": "Allow",
							"Principal": {
								"Service": "lambda.amazonaws.com"
							}
						}
					],
					"Version": "2012-10-17"
				},
				"ManagedPolicyArns": [
					{
						"Fn::Join": [
							"",
							[
								"arn:",
								{
									"Ref": "AWS::Partition"
								},
								":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
							]
						]
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
			}
		},
		"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyDocument": {
					"Statement": [
						{
							"Action": [
								"s3:GetBucket*",
								"s3:GetObject*",
								"s3:List*"
							],
							"Effect": "Allow",
							"Resource": [
								{
									"Fn::Join": [
										"",
										[
											"arn:",
											{
												"Ref": "AWS::Partition"
											},
											":s3:::",
											{
												"Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
											},
											"/*"
										]
									]
								},
								{
									"Fn::Join": [
										"",
										[
											"arn:",
											{
												"Ref": "AWS::Partition"
											},
											":s3:::",
											{
												"Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
											}
										]
									]
								}
							]
						},
						{
							"Action": [
								"s3:Abort*",
								"s3:DeleteObject*",
								"s3:GetBucket*",
								"s3:GetObject*",
								"s3:List*",
								"s3:PutObject",
								"s3:PutObjectLegalHold",
								"s3:PutObjectRetention",
								"s3:PutObjectTagging",
								"s3:PutObjectVersionTagging"
							],
							"Effect": "Allow",
							"Resource": [
								{
									"Fn::GetAtt": [
										"CatWebsiteBucket56DD82B3",
										"Arn"
									]
								},
								{
									"Fn::Join": [
										"",
										[
											{
												"Fn::GetAtt": [
													"CatWebsiteBucket56DD82B3",
													"Arn"
												]
											},
											"/*"
										]
									]
								}
							]
						}
					],
					"Version": "2012-10-17"
				},
				"PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
				"Roles": [
					{
						"Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
			}
		},
		"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Code": {
					"S3Bucket": {
						"Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
					},
					"S3Key": "9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d.zip"
				},
				"Environment": {
					"Variables": {
						"AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
					}
				},
				"Handler": "index.handler",
				"Layers": [
					{
						"Ref": "DeployWebsiteAwsCliLayer17DBC421"
					}
				],
				"Role": {
					"Fn::GetAtt": [
						"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
						"Arn"
					]
				},
				"Runtime": "python3.11",
				"Timeout": 900
			},
			"DependsOn": [
				"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
				"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
			],
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
				"aws:asset:path": "asset.9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d",
				"aws:asset:is-bundled": false,
				"aws:asset:property": "Code"
			}
		},
		"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CLogGroup817B64E9": {
			"Type": "AWS::Logs::LogGroup",
			"Properties": {
				"LogGroupName": {
					"Fn::Join": [
						"",
						[
							"/aws/lambda/",
							{
								"Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536"
							}
						]
					]
				},
				"RetentionInDays": 731
			},
			"UpdateReplacePolicy": "Retain",
			"DeletionPolicy": "Retain",
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/LogGroup/Resource"
			}
		},
		"FavoriteCatTopic3AA713D1": {
			"Type": "AWS::SNS::Topic",
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/FavoriteCatTopic/Resource"
			}
		},
		"FavoriteCatSubscription7DC71371": {
			"Type": "AWS::SNS::Subscription",
			"Properties": {
				"Endpoint": "BoykoBoev@students.softuni.bg",
				"Protocol": "email",
				"TopicArn": {
					"Ref": "FavoriteCatTopic3AA713D1"
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/FavoriteCatSubscription/Resource"
			}
		},
		"CatTableEAEA084A": {
			"Type": "AWS::DynamoDB::Table",
			"Properties": {
				"AttributeDefinitions": [
					{
						"AttributeName": "PK",
						"AttributeType": "S"
					},
					{
						"AttributeName": "SK",
						"AttributeType": "S"
					}
				],
				"BillingMode": "PAY_PER_REQUEST",
				"KeySchema": [
					{
						"AttributeName": "PK",
						"KeyType": "HASH"
					},
					{
						"AttributeName": "SK",
						"KeyType": "RANGE"
					}
				]
			},
			"UpdateReplacePolicy": "Delete",
			"DeletionPolicy": "Delete",
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/CatTable/Resource"
			}
		},
		"SaveCatFunctionServiceRole28ADBD2A": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [
						{
							"Action": "sts:AssumeRole",
							"Effect": "Allow",
							"Principal": {
								"Service": "lambda.amazonaws.com"
							}
						}
					],
					"Version": "2012-10-17"
				},
				"ManagedPolicyArns": [
					{
						"Fn::Join": [
							"",
							[
								"arn:",
								{
									"Ref": "AWS::Partition"
								},
								":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
							]
						]
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/SaveCatFunction/ServiceRole/Resource"
			}
		},
		"SaveCatFunctionServiceRoleDefaultPolicyFE3ED58F": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyDocument": {
					"Statement": [
						{
							"Action": "sns:Publish",
							"Effect": "Allow",
							"Resource": {
								"Ref": "FavoriteCatTopic3AA713D1"
							}
						},
						{
							"Action": [
								"dynamodb:BatchWriteItem",
								"dynamodb:DeleteItem",
								"dynamodb:DescribeTable",
								"dynamodb:PutItem",
								"dynamodb:UpdateItem"
							],
							"Effect": "Allow",
							"Resource": [
								{
									"Fn::GetAtt": [
										"CatTableEAEA084A",
										"Arn"
									]
								},
								{
									"Ref": "AWS::NoValue"
								}
							]
						}
					],
					"Version": "2012-10-17"
				},
				"PolicyName": "SaveCatFunctionServiceRoleDefaultPolicyFE3ED58F",
				"Roles": [
					{
						"Ref": "SaveCatFunctionServiceRole28ADBD2A"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/SaveCatFunction/ServiceRole/DefaultPolicy/Resource"
			}
		},
		"SaveCatFunctionB1E6A7E2": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Code": {
					"S3Bucket": {
						"Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
					},
					"S3Key": "ceb596c2bce0afef2962275b9414b804c6015bf9f9e13d84a1b0cc349bfefe0c.zip"
				},
				"Environment": {
					"Variables": {
						"TOPIC_ARN": {
							"Ref": "FavoriteCatTopic3AA713D1"
						},
						"TABLE_NAME": {
							"Ref": "CatTableEAEA084A"
						}
					}
				},
				"Handler": "index.handler",
				"Role": {
					"Fn::GetAtt": [
						"SaveCatFunctionServiceRole28ADBD2A",
						"Arn"
					]
				},
				"Runtime": "nodejs20.x"
			},
			"DependsOn": [
				"SaveCatFunctionServiceRoleDefaultPolicyFE3ED58F",
				"SaveCatFunctionServiceRole28ADBD2A"
			],
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/SaveCatFunction/Resource",
				"aws:asset:path": "asset.ceb596c2bce0afef2962275b9414b804c6015bf9f9e13d84a1b0cc349bfefe0c",
				"aws:asset:is-bundled": true,
				"aws:asset:property": "Code"
			}
		},
		"SaveCatFunctionLogGroup7082F3B5": {
			"Type": "AWS::Logs::LogGroup",
			"Properties": {
				"LogGroupName": {
					"Fn::Join": [
						"",
						[
							"/aws/lambda/",
							{
								"Ref": "SaveCatFunctionB1E6A7E2"
							}
						]
					]
				},
				"RetentionInDays": 731
			},
			"UpdateReplacePolicy": "Retain",
			"DeletionPolicy": "Retain",
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/SaveCatFunction/LogGroup/Resource"
			}
		},
		"SaveCatFunctionInvokeLambdaFunctionEC6C07A4": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"Action": "lambda:InvokeFunction",
				"FunctionName": {
					"Fn::GetAtt": [
						"SaveCatFunctionB1E6A7E2",
						"Arn"
					]
				},
				"Principal": "events.amazonaws.com",
				"SourceArn": {
					"Fn::Join": [
						"",
						[
							"arn:aws:events:",
							{
								"Ref": "AWS::Region"
							},
							":",
							{
								"Ref": "AWS::AccountId"
							},
							":rule/*"
						]
					]
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/SaveCatFunction/InvokeLambdaFunction"
			}
		},
		"RetakeExamApi63A028CF": {
			"Type": "AWS::ApiGateway::RestApi",
			"Properties": {
				"Name": "RetakeExamApi"
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/Resource"
			}
		},
		"RetakeExamApiDeploymentA0E1E7FFc00230f46209d798b9a03815e99e5ed3": {
			"Type": "AWS::ApiGateway::Deployment",
			"Properties": {
				"Description": "Automatically created by the RestApi construct",
				"RestApiId": {
					"Ref": "RetakeExamApi63A028CF"
				}
			},
			"DependsOn": [
				"RetakeExamApiOPTIONSC22ACDA9",
				"RetakeExamApisaveCatGETFDBB892B",
				"RetakeExamApisaveCatOPTIONSB9DACFA4",
				"RetakeExamApisaveCatPOST46506B23",
				"RetakeExamApisaveCat60F6664D"
			],
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/Deployment/Resource",
				"aws:cdk:do-not-refactor": true
			}
		},
		"RetakeExamApiDeploymentStageprodD40DC8D4": {
			"Type": "AWS::ApiGateway::Stage",
			"Properties": {
				"DeploymentId": {
					"Ref": "RetakeExamApiDeploymentA0E1E7FFc00230f46209d798b9a03815e99e5ed3"
				},
				"RestApiId": {
					"Ref": "RetakeExamApi63A028CF"
				},
				"StageName": "prod"
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/DeploymentStage.prod/Resource"
			}
		},
		"RetakeExamApiOPTIONSC22ACDA9": {
			"Type": "AWS::ApiGateway::Method",
			"Properties": {
				"ApiKeyRequired": false,
				"AuthorizationType": "NONE",
				"HttpMethod": "OPTIONS",
				"Integration": {
					"IntegrationResponses": [
						{
							"ResponseParameters": {
								"method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
								"method.response.header.Access-Control-Allow-Origin": "'*'",
								"method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
								"method.response.header.Access-Control-Allow-Credentials": "'true'",
								"method.response.header.Access-Control-Max-Age": "'300'"
							},
							"StatusCode": "204"
						}
					],
					"RequestTemplates": {
						"application/json": "{ statusCode: 200 }"
					},
					"Type": "MOCK"
				},
				"MethodResponses": [
					{
						"ResponseParameters": {
							"method.response.header.Access-Control-Allow-Headers": true,
							"method.response.header.Access-Control-Allow-Origin": true,
							"method.response.header.Access-Control-Allow-Methods": true,
							"method.response.header.Access-Control-Allow-Credentials": true,
							"method.response.header.Access-Control-Max-Age": true
						},
						"StatusCode": "204"
					}
				],
				"ResourceId": {
					"Fn::GetAtt": [
						"RetakeExamApi63A028CF",
						"RootResourceId"
					]
				},
				"RestApiId": {
					"Ref": "RetakeExamApi63A028CF"
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/Default/OPTIONS/Resource"
			}
		},
		"RetakeExamApisaveCat60F6664D": {
			"Type": "AWS::ApiGateway::Resource",
			"Properties": {
				"ParentId": {
					"Fn::GetAtt": [
						"RetakeExamApi63A028CF",
						"RootResourceId"
					]
				},
				"PathPart": "saveCat",
				"RestApiId": {
					"Ref": "RetakeExamApi63A028CF"
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/Default/saveCat/Resource"
			}
		},
		"RetakeExamApisaveCatOPTIONSB9DACFA4": {
			"Type": "AWS::ApiGateway::Method",
			"Properties": {
				"ApiKeyRequired": false,
				"AuthorizationType": "NONE",
				"HttpMethod": "OPTIONS",
				"Integration": {
					"IntegrationResponses": [
						{
							"ResponseParameters": {
								"method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
								"method.response.header.Access-Control-Allow-Origin": "'*'",
								"method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
								"method.response.header.Access-Control-Allow-Credentials": "'true'",
								"method.response.header.Access-Control-Max-Age": "'300'"
							},
							"StatusCode": "204"
						}
					],
					"RequestTemplates": {
						"application/json": "{ statusCode: 200 }"
					},
					"Type": "MOCK"
				},
				"MethodResponses": [
					{
						"ResponseParameters": {
							"method.response.header.Access-Control-Allow-Headers": true,
							"method.response.header.Access-Control-Allow-Origin": true,
							"method.response.header.Access-Control-Allow-Methods": true,
							"method.response.header.Access-Control-Allow-Credentials": true,
							"method.response.header.Access-Control-Max-Age": true
						},
						"StatusCode": "204"
					}
				],
				"ResourceId": {
					"Ref": "RetakeExamApisaveCat60F6664D"
				},
				"RestApiId": {
					"Ref": "RetakeExamApi63A028CF"
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/Default/saveCat/OPTIONS/Resource"
			}
		},
		"RetakeExamApisaveCatPOSTApiPermissionRetakeExamStackRetakeExamApi52A87E5CPOSTsaveCat441274B9": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"Action": "lambda:InvokeFunction",
				"FunctionName": {
					"Fn::GetAtt": [
						"SaveCatFunctionB1E6A7E2",
						"Arn"
					]
				},
				"Principal": "apigateway.amazonaws.com",
				"SourceArn": {
					"Fn::Join": [
						"",
						[
							"arn:",
							{
								"Ref": "AWS::Partition"
							},
							":execute-api:",
							{
								"Ref": "AWS::Region"
							},
							":",
							{
								"Ref": "AWS::AccountId"
							},
							":",
							{
								"Ref": "RetakeExamApi63A028CF"
							},
							"/",
							{
								"Ref": "RetakeExamApiDeploymentStageprodD40DC8D4"
							},
							"/POST/saveCat"
						]
					]
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/Default/saveCat/POST/ApiPermission.RetakeExamStackRetakeExamApi52A87E5C.POST..saveCat"
			}
		},
		"RetakeExamApisaveCatPOSTApiPermissionTestRetakeExamStackRetakeExamApi52A87E5CPOSTsaveCat7C0AE040": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"Action": "lambda:InvokeFunction",
				"FunctionName": {
					"Fn::GetAtt": [
						"SaveCatFunctionB1E6A7E2",
						"Arn"
					]
				},
				"Principal": "apigateway.amazonaws.com",
				"SourceArn": {
					"Fn::Join": [
						"",
						[
							"arn:",
							{
								"Ref": "AWS::Partition"
							},
							":execute-api:",
							{
								"Ref": "AWS::Region"
							},
							":",
							{
								"Ref": "AWS::AccountId"
							},
							":",
							{
								"Ref": "RetakeExamApi63A028CF"
							},
							"/test-invoke-stage/POST/saveCat"
						]
					]
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/Default/saveCat/POST/ApiPermission.Test.RetakeExamStackRetakeExamApi52A87E5C.POST..saveCat"
			}
		},
		"RetakeExamApisaveCatPOST46506B23": {
			"Type": "AWS::ApiGateway::Method",
			"Properties": {
				"AuthorizationType": "NONE",
				"HttpMethod": "POST",
				"Integration": {
					"IntegrationHttpMethod": "POST",
					"Type": "AWS_PROXY",
					"Uri": {
						"Fn::Join": [
							"",
							[
								"arn:",
								{
									"Ref": "AWS::Partition"
								},
								":apigateway:",
								{
									"Ref": "AWS::Region"
								},
								":lambda:path/2015-03-31/functions/",
								{
									"Fn::GetAtt": [
										"SaveCatFunctionB1E6A7E2",
										"Arn"
									]
								},
								"/invocations"
							]
						]
					}
				},
				"ResourceId": {
					"Ref": "RetakeExamApisaveCat60F6664D"
				},
				"RestApiId": {
					"Ref": "RetakeExamApi63A028CF"
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/Default/saveCat/POST/Resource"
			}
		},
		"RetakeExamApisaveCatGETApiPermissionRetakeExamStackRetakeExamApi52A87E5CGETsaveCat9530447C": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"Action": "lambda:InvokeFunction",
				"FunctionName": {
					"Fn::GetAtt": [
						"SaveCatFunctionB1E6A7E2",
						"Arn"
					]
				},
				"Principal": "apigateway.amazonaws.com",
				"SourceArn": {
					"Fn::Join": [
						"",
						[
							"arn:",
							{
								"Ref": "AWS::Partition"
							},
							":execute-api:",
							{
								"Ref": "AWS::Region"
							},
							":",
							{
								"Ref": "AWS::AccountId"
							},
							":",
							{
								"Ref": "RetakeExamApi63A028CF"
							},
							"/",
							{
								"Ref": "RetakeExamApiDeploymentStageprodD40DC8D4"
							},
							"/GET/saveCat"
						]
					]
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/Default/saveCat/GET/ApiPermission.RetakeExamStackRetakeExamApi52A87E5C.GET..saveCat"
			}
		},
		"RetakeExamApisaveCatGETApiPermissionTestRetakeExamStackRetakeExamApi52A87E5CGETsaveCat1A1B1DB4": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"Action": "lambda:InvokeFunction",
				"FunctionName": {
					"Fn::GetAtt": [
						"SaveCatFunctionB1E6A7E2",
						"Arn"
					]
				},
				"Principal": "apigateway.amazonaws.com",
				"SourceArn": {
					"Fn::Join": [
						"",
						[
							"arn:",
							{
								"Ref": "AWS::Partition"
							},
							":execute-api:",
							{
								"Ref": "AWS::Region"
							},
							":",
							{
								"Ref": "AWS::AccountId"
							},
							":",
							{
								"Ref": "RetakeExamApi63A028CF"
							},
							"/test-invoke-stage/GET/saveCat"
						]
					]
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/Default/saveCat/GET/ApiPermission.Test.RetakeExamStackRetakeExamApi52A87E5C.GET..saveCat"
			}
		},
		"RetakeExamApisaveCatGETFDBB892B": {
			"Type": "AWS::ApiGateway::Method",
			"Properties": {
				"AuthorizationType": "NONE",
				"HttpMethod": "GET",
				"Integration": {
					"IntegrationHttpMethod": "POST",
					"Type": "AWS_PROXY",
					"Uri": {
						"Fn::Join": [
							"",
							[
								"arn:",
								{
									"Ref": "AWS::Partition"
								},
								":apigateway:",
								{
									"Ref": "AWS::Region"
								},
								":lambda:path/2015-03-31/functions/",
								{
									"Fn::GetAtt": [
										"SaveCatFunctionB1E6A7E2",
										"Arn"
									]
								},
								"/invocations"
							]
						]
					}
				},
				"ResourceId": {
					"Ref": "RetakeExamApisaveCat60F6664D"
				},
				"RestApiId": {
					"Ref": "RetakeExamApi63A028CF"
				}
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/RetakeExamApi/Default/saveCat/GET/Resource"
			}
		},
		"CDKMetadata": {
			"Type": "AWS::CDK::Metadata",
			"Properties": {
				"Analytics": "v2:deflate64:H4sIAAAAAAAA/+1XbW/bNhD+LeXHgtGyFMMAf3OcbAuaNJ7tDRgMwziRZ5kJRWp8sasK+u8FKVFW0jbDNnTAhgEGSN4b7053D88X2cX5d9n5KzjaM8Yfz6TIs2bpgD1SONptY99kzaVnj+jWDTliboXDG8Xx/ZVmvkTlyIS8JpRUPpeCLRD4lDG0lkyc8UhJLjV7nEdmYkR5g6U+gJxrKVhNJoSjdUbXhBLwTl+hRIf3+QMy15tqN3S2U50rtFs65XVD8niMlsdiHb8XvgSL601L7Zttw7GSug7eZx3zaiBQsBadzaZhaamEMueQNbOduoUaza9orNCKLoUqJDqtfvCKOaHVuiHeC95HJ4OsJZM1eU02lKA6CKPVKF2d3bk3lbbY05woUfskYbRMjBJLbeql+JAIWO2xRANy6bSBAkesQ8VOu6XPFbqU8p2QaGvrsExO6OJHo33VH5nmycoeFJdokiteBd+6/NKGAOd36ICDgy5EGj7Q5vOskIF2Q0d5+sPk/JsScT32/hRwx7wdR9pVZspD2M/RlMKGemqpgDJrFlriuiFgrS+RX9Zk0pDKCMVEBXLKmPZDjjqZoDCN9nqfSAkKCuSx9AWGu5sntHpqetnk5ErP0xWpG9dNz3UO2P5GSaFw4A3xvch82e5/OsD4nYPjtAeoEE8yt9KLWM/PbvmUzPnSgcNQWHbk8OfIX9l+jKcLpaVSFzZrbvuGCd3cb9/BqDE+JUYjSa2lVtmsWelKsA4FZjsVT3Tpc8uMqHqsQMUrLU6vjNFOMy3JhGAJQgawCGqjO8YGWsprBaXmedasII/NVYFxIjDfYiw/lVykxNVV2C5DmVlt3MsSuZBSqOKuA4v59Lft/HqxXVz//Mv1cvXCC9e5Gd1J78tWaY4PNnsXlxFUfhl+Am46Uw/75xg6YFhLm+73l421GwqVKMDhEeqsWaB100qsG8JxB166mTZ2bnAnRbF39zHxNuQNpNTHeyMKoRLyRtIdur3mT0g/IfCIlCfSzCBH5QTIYZYo4f206KPqu6zzhZ7e7+jWUADJYCWGscOBUCdxO8bylb7VhWAgb/iTjvh69BjEaPhYOigwhpBI48oOTLpAq71hGOeZ2DtdPtcNMT0rvV3OVR2vJwjlsDAwSowefS3v9tqID6FAxqebpJ1IUX/VNUJEZKjEW6wX+LsXBjmZ7EBa/JJ8eMSDSwu0lVa2B3DrwHk7O727pmfPwUCJLtVGu2lPU8bIyp81Qv9P1j+VrL69/qaF2ACdwtABHZiP/oKA28/BjFsmibYtnXnrdDnopkltLPVMZm70QXA0odNo/D8QOlCoIqF2HGS3cLRMimx6tDMp4sQXWps+v2m47d67yruWBszPHuw3h4uL7Nvvs/NXD1aIsx6Ws0W3fgS7d9Jwnw0AAA=="
			},
			"Metadata": {
				"aws:cdk:path": "RetakeExamStack/CDKMetadata/Default"
			},
			"Condition": "CDKMetadataAvailable"
		}
	},
	"Outputs": {
		"WebsiteURL": {
			"Value": {
				"Fn::GetAtt": [
					"CatWebsiteBucket56DD82B3",
					"WebsiteURL"
				]
			}
		},
		"RetakeExamApiEndpoint33FA7D1F": {
			"Value": {
				"Fn::Join": [
					"",
					[
						"https://",
						{
							"Ref": "RetakeExamApi63A028CF"
						},
						".execute-api.",
						{
							"Ref": "AWS::Region"
						},
						".",
						{
							"Ref": "AWS::URLSuffix"
						},
						"/",
						{
							"Ref": "RetakeExamApiDeploymentStageprodD40DC8D4"
						},
						"/"
					]
				]
			}
		}
	},
	"Conditions": {
		"CDKMetadataAvailable": {
			"Fn::Or": [
				{
					"Fn::Or": [
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"af-south-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ap-east-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ap-northeast-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ap-northeast-2"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ap-northeast-3"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ap-south-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ap-south-2"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ap-southeast-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ap-southeast-2"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ap-southeast-3"
							]
						}
					]
				},
				{
					"Fn::Or": [
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ap-southeast-4"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ca-central-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"ca-west-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"cn-north-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"cn-northwest-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"eu-central-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"eu-central-2"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"eu-north-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"eu-south-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"eu-south-2"
							]
						}
					]
				},
				{
					"Fn::Or": [
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"eu-west-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"eu-west-2"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"eu-west-3"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"il-central-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"me-central-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"me-south-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"sa-east-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"us-east-1"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"us-east-2"
							]
						},
						{
							"Fn::Equals": [
								{
									"Ref": "AWS::Region"
								},
								"us-west-1"
							]
						}
					]
				},
				{
					"Fn::Equals": [
						{
							"Ref": "AWS::Region"
						},
						"us-west-2"
					]
				}
			]
		}
	},
	"Parameters": {
		"BootstrapVersion": {
			"Type": "AWS::SSM::Parameter::Value<String>",
			"Default": "/cdk-bootstrap/hnb659fds/version",
			"Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
		}
	},
	"Rules": {
		"CheckBootstrapVersion": {
			"Assertions": [
				{
					"Assert": {
						"Fn::Not": [
							{
								"Fn::Contains": [
									[
										"1",
										"2",
										"3",
										"4",
										"5"
									],
									{
										"Ref": "BootstrapVersion"
									}
								]
							}
						]
					},
					"AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
				}
			]
		}
	}
}